#!/usr/bin/env node

const { join } = require('path');

const { pipe, through } = require('mississippi');
const split = require('split2');
const _ = require('lodash');

const Database = require('better-sqlite3');

const yargs = require('yargs');

const cliArgsSpec = {
  agency: {
    demand: true,
    type: 'string',
    description: 'GTFS Agency'
  }
};

const { argv } = yargs
  .strict()
  .parserConfiguration({
    'camel-case-expansion': false,
    'flatten-duplicate-arrays': false
  })
  .wrap(yargs.terminalWidth() / 1.618)
  .option(cliArgsSpec);

const { agency } = argv;

const dbFile = join(__dirname, `../data/sqlite/${agency}`);
const db = new Database(dbFile);

const ways2shapes = {};

pipe(
  process.stdin,
  split(JSON.parse),
  through.obj(
    function collect_ways2shapes({ shape_id, way_ids }, $, cb) {
      if (!(shape_id && Array.isArray(way_ids))) {
        return cb();
      }

      const ways = _.uniq(way_ids);

      for (let i = 0; i < ways.length; ++i) {
        const way = ways[i];

        ways2shapes[way] = ways2shapes[way] || new Set();
        ways2shapes[way].add(shape_id);
      }

      return cb();
    },
    function output_ways2trips(cb) {
      const ways = Object.keys(ways2shapes);

      for (let i = 0; i < ways.length; ++i) {
        const way_id = ways[i];
        const shape_ids = [...ways2shapes[way_id]];

        // https://github.com/JoshuaWise/better-sqlite3/issues/81#issuecomment-346138586
        const params = '?,'.repeat(shape_ids.length).slice(0, -1);

        const [avg_daily_trips] = db
          .prepare(
            `
            SELECT
                SUM(amp_num_trips) AS amp,
                SUM(midd_num_trips) AS midd,
                SUM(pmp_num_trips) AS pmp,
                SUM(we_num_trips) AS we,
                SUM(ovn_num_trips) AS ovn
              FROM avg_daily_trips_across_shape_by_time_period
              WHERE (shape_id IN (${params}))
          `
          )
          .all(shape_ids);

        this.push(`${JSON.stringify({ way_id, avg_daily_trips })}\n`);
      }
      cb();
    }
  ),
  process.stdout,
  err => {
    if (err) {
      console.error(err);
    }
  }
);
