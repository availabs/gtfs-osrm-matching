#!/usr/bin/env node

// Takes a NDJSON file of GeoJSON feaures via STDIN
//   And outputs to STDOUT a valid GeoJSON object

const { pipe, through } = require('mississippi');
const split = require('split2');
const _ = require('lodash');

const aggregate_way_trip_counts = {};

const newAggTripCts = () => ({
  amp: 0,
  midd: 0,
  pmp: 0,
  we: 0,
  ovn: 0
});

pipe(
  process.stdin,
  split(JSON.parse),
  through.obj(
    function aggregate({ way_id, avg_daily_trips }, $, cb) {
      // console.error(JSON.stringify({ way_id, avg_daily_trips }));
      aggregate_way_trip_counts[way_id] =
        aggregate_way_trip_counts[way_id] || newAggTripCts();

      const time_periods = Object.keys(avg_daily_trips);

      for (let i = 0; i < time_periods.length; ++i) {
        const time_period = time_periods[i];
        aggregate_way_trip_counts[way_id][time_period] +=
          avg_daily_trips[time_period] || 0;
      }

      cb();
    },
    function flush(cb) {
      const way_ids = Object.keys(aggregate_way_trip_counts);

      this.push('way_id,amp,midd,pmp,we,ovn\n');

      for (let i = 0; i < way_ids.length; ++i) {
        const way_id = way_ids[i];
        const { amp, midd, pmp, we, ovn } = aggregate_way_trip_counts[way_id];

        const a = _.round(amp, 2);
        const m = _.round(midd, 2);
        const p = _.round(pmp, 2);
        const w = _.round(we, 2);
        const o = _.round(ovn, 2);

        const row = `${way_id},${a},${m},${p},${w},${o}\n`;

        this.push(row);
      }

      cb();
    }
  ),
  process.stdout
);
